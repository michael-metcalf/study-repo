@import url('https://fonts.googleapis.com/css?family=Raleway:400,700&display=swap');
/* @font-face kit by Fonts2u (https://fonts2u.com) */ @font-face {font-family:"Final Fantasy Script Collection - Final Fantasy VII";src:url("fonts/Final_Fantasy_VII.eot?") format("eot"),url("fonts/Final_Fantasy_VII.woff") format("woff"),url("fonts/Final_Fantasy_VII.ttf") format("truetype"),url("fonts/Final_Fantasy_VII.svg#FinalFantasyVII") format("svg");font-weight:normal;font-style:normal;}

/* Custom properties/variables */
:root {
  --main-white: #f4f4f4;
  --main-dark-gray: #333;
  --main-orange: #cfa10b;
  --main-red: #f50606;
}

/* Base reset */
* {
  padding: 0;
  margin: 0;
}

/* Box sizing and font sizing */
*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
  -moz-box-sizing: inherit;
  box-sizing: inherit;
}

html {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;

/* Set font size for easy rem calculations
 * default font size = 16px, 1rem = 16px, 100% = 16%
 * (100% / 16px) * 10 = 62.5%, 1rem = 10px, 62.5% = 10px
 */
 font-size: 62.5%;
 scroll-behavior: smooth;
}

/* A few media queries to set some font sizes at different screen sizes.
 * This helps automate a bit of responsiveness.
 * The trick is to use the rem unit for size values, margin, and padding.
 * Because rem is relative to the document font size,
 * when we scale up or down the font size of the document
 * it will affect all properties using rem units for the values. */

 /* The writer of the solution is using the em unit for breakpoints.

  * (Why em and not rem, or px?)
  * (After researching this question (https://adamwathan.me/dont-use-em-for-media-queries/), it seems like declaring explicit px values for breakpoints is the best practice, because Safari has a bug where it won't trigger rem and em breakpoints properly when the page is zoomed in...so, I'm going to try using only explicit px breakpoint values, but I'll still retain the notes and CSS from the original author, just commented out.)

  * The calculation is the following:
  * screen size divided by browser base font size.
  * As an example calculation for a breakpoint at 980px:
  * 980px / 16px = 61.25em
  */

/* 1200px / 16px = 75em
@media (max-width: 75em) {
  html {
    font-size: 60%;
  }
} */

/* 980px / 16px = 61.25em
@media (max-width: 75em) {
  html {
    font-size: 58%;
  }
} */

/* 460px / 16px = 28.75em
@media (max-width: 28.75em) {
  html {
    font-size: 55%;
  }
} */

/* The non-em declarations, using px and made to match Bootstrap 4 breakpoints: */
/* Extra large devices (large desktops, 1200px and up) */
@media (min-width: 1200px) {
  html {
    font-size: 100%;
  }
}

/* Large devices (desktops, 992px and up) */
@media (min-width: 992px) {
  html {
    font-size: 60%;
  }
}

/* Medium devices (tablets, 768px and up) */
@media (min-width: 768px) {
  html {
    font-size: 58%;
  }
}

/* Small devices (landscape phones, 576px and up) */
@media (min-width: 576px) {
  html {
    font-size: 55%;
  }
}

/* Base styles */
body {
  font-family: 'Raleway', sans-serif;
  font-size: 1.8rem; /* 18px */
  font-weight: 400;
  line-height: 1.4;
  color: var(--main-white);
}

h1,
h2 {
  font-family: 'Raleway', sans-serif;
  font-weight: 700;
  text-align: center;
}

h1 {
  font-size: 6rem;
}

h2 {
  font-size: 4.2rem;
}

ul {
  list-style: none;
}

a {
  text-decoration: none;
  color: var(--main-white);
}

img {
  display: block;
  width: 100%;
}

/* nav */
.nav {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  position: fixed;
  /* top: 0, left: 0, and right: 0 tell the browser where I want the fixed navbar positioned. */
  top: 0;
  left: 0;
  right: 0;
  width: 100%;
  background:var(--main-dark-gray);
  z-index: 10; /* ensures the navbar is always in front of other content, and that content scrolls behind the navbar */
  height: 10vh;
  border-bottom: 3px solid var(--main-orange);
}

.nav-list {
  display: flex;
  margin-right: 2rem;
  /* list-style: none; declare this globally */
}

@media (max-width: 576px) {
  .nav {
    justify-content: center;
  }

  .nav-list {
    margin: 0 1rem;
  }
}

.nav-list a {
  display: block;
  font-size: 2.2rem;
  padding: 2rem;
}

/* @media screen and (min-width: 576px) {
  .nav-list li {
    justify-content: space-around;
    font-size: 1rem;
    padding: 0 1rem;
  }
} */

.nav-list a:hover {
  color: var(--main-orange);
}

/* .nav-list a:visited {
  color: #f4f4f4;
} */

/* #page-wrapper {
  display: flex;
  justify-content: center;
  text-align: center;
  width: 80%;
} */

/* Welcome section */

.welcome-section {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  height: 100vh;
  width: 100%;
  background-image: linear-gradient(to bottom right, rgb(33, 33, 219) 0%, rgb(0,0,128) 15%, rgb(0,0,16) 95%);
  color: var(--main-white);
  text-shadow: 4px 4px 3px rgba(0,0,0,0.4),
               4px 8px 13px rgba(0,0,0,0.1),
               4px 18px 23px rgba(0,0,0,0.1);
}

.welcome-section > h1 {
  font-family:'Final Fantasy Script Collection - Final Fantasy VII', 'Raleway', sans-serif;
  font-size: 7rem;
  font-weight: normal;
  line-height: 0.8;
}

.welcome-section > p {
  font-family:'Final Fantasy Script Collection - Final Fantasy VII', 'Raleway', sans-serif;
  font-size: 4rem;
}

.projects-section {
  background: #6f58c9;
  text-align: center;
  border-top: 3px solid var(--main-orange);
}

.projects-section-header {
  margin: 4rem;
}

@media (min-width: 576px) {
  .projects-section-header {
    font-size: 4rem;
  }
}

/* "Automagic" image grid using no media queries */

.projects-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
  grid-gap: 4rem;
  width: 90%;
  max-width: 1280px;
  margin: 0 auto;
  margin-bottom: 6rem;
}

@media (max-width: 576px) {
  .projects-section {
    padding: 6rem 1rem;
  }

  .projects-grid {
    grid-template-columns: 1fr;
  }
}

.project {
  background: var(--main-dark-gray);
  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
  border-radius: 2px;
}

.code {
  color: var(--main-dark-gray);
  transition: color 0.3s ease-out;
}

.project:hover .code {
  color: var(--main-orange);
}

.project-image {
  height: calc(100% - 6.8rem);
  width: 100%;
  object-fit: cover;
}

.project-title {
  font-size: 2rem;
  padding: 2rem 0.5rem;
}

.btn {
  display: inline-block;
  padding: 1rem 2rem;
  border-radius: 2px;
}

.btn-show-all {
  font-size: 2rem;
  background: var(--main-dark-gray);
  transition: background 0.3s ease-out;
}

.btn-show-all:hover {
  background: var(--main-red);
}

.btn-show-all:hover i {
  transform: translateX(4px);
}

.btn-show-all > i {
  margin-left: 10px;
  transform: translateX(0);
  transition: transform 0.3s ease-out;
}